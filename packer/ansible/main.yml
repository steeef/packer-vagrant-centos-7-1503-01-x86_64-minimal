---
# file: ansible/main.yml

- hosts: all
  sudo: no
  connection: local
  gather_facts: yes
  tasks:
    - name: Get the current kernel release.
      command: uname -r
      changed_when: false
      register: kernel_release

    - name: Ensure necessary packages are installed.
      yum: "pkg={{ item }} state=installed"
      with_items:
        - wget
        - perl
        - cpp
        - gcc
        - make
        - bzip2
        - kernel-headers
        - kernel-devel
        - "kernel-devel-{{ kernel_release.stdout }}"
        - libselinux-python

    # Fix slow DNS.
    - name: Fix slow DNS (adapted from Bento).
      lineinfile: >
        dest=/etc/sysconfig/network
        regexp='^RES_OPTIONS'
        line='RES_OPTIONS="single-request-reopen"'
        state=present

    - name: Restart network service (explicitly).
      service: name=network state=restarted

    # SSH daemon configuration.
    - name: Configure SSH daemon.
      lineinfile: >
        dest=/etc/ssh/sshd_config
        regexp="{{ item.regexp }}"
        line="{{ item.line }}"
        state=present
      with_items:
        - { regexp: '^#?\s*UseDNS', line: 'UseDNS no' }
        - { regexp: '^#?\s*GSSAPIAuthentication', line: 'GSSAPIAuthentication no' }
        - { regexp: '^#?\s*PermitRootLogin', line: 'PermitRootLogin no' }

    - name: create vagrant user
      user: name=vagrant state=present groups=wheel createhome=yes

    - name: vagrant password
      shell: echo vagrant | passwd vagrant --stdin

    - name: vagrant sudoers
      lineinfile: >
        dest=/etc/sudoers.d/vagrant
        line="{{ item }}"
        state=present
        create=yes
        owner=root
        group=root
        mode=0400
        validate='visudo -cf %s'
      with_items:
        - "Defaults:%vagrant !requiretty"
        - "Defaults:%vagrant env_keep += SSH_AUTH_SOCK"
        - "%vagrant ALL=(ALL) NOPASSWD: ALL"

    # Vagrant SSH configuration.
    - name: Configure Vagrant .ssh directory.
      file: path=/home/vagrant/.ssh state=directory owner=vagrant group=vagrant mode=700

    - name: Get Vagrant's public key.
      get_url: >
        url=https://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub
        dest=/home/vagrant/.ssh/authorized_keys
        owner=vagrant
        group=vagrant
        mode=600

    # VirtualBox tools installation.
    - name: Check if VirtualBox is running the guest VM.
      stat: path=/root/.vbox_version
      register: virtualbox_check

    - include: virtualbox.yml
      when: virtualbox_check.stat.exists

    # VMware tools installation.
    - name: Check if VMWare is running the guest VM.
      shell: "cat /proc/scsi/scsi | grep VMware"
      changed_when: false
      failed_when: false
      register: vmware_check

    - include: vmware.yml
      when: vmware_check.rc == 0

    # Cleanup tasks.
    - name: Remove unneeded packages.
      yum: "pkg={{ item }} state=absent"
      with_items:
        - cpp
        - kernel-devel
        - kernel-headers

    - name: Clean up yum.
      command: yum clean all

    - name: Remove any remnants of VirtualBox ISOs.
      shell: rm -rf VBoxGuestAdditions_*.iso VBoxGuestAdditions_*.iso.?

    - name: Remove RedHat interface persistence (step 1).
      shell: rm -f /etc/udev/rules.d/70-persistent-net.rules

    - name: Remove RedHat interface persistence (step 2).
      lineinfile: >
        dest=/etc/sysconfig/network-scripts/ifcfg-eth0
        regexp="{{ item }}"
        state=absent
      with_items:
        - '^HWADDR'
        - '^UUID'

    - name: truncate files
      shell: >
        > "{{ item }}"
      failed_when: False
      with_items:
        - "/etc/resolv.conf"
        - "/var/log/wtmp"
        - "/var/log/cron"
        - "/var/log/dmesg"
        - "/var/log/dmesg.old"
        - "/var/log/lastlog"
        - "/var/log/secure"
        - "/var/log/messages"
        - "/var/log/maillog"

    - name: shred files
      shell: >
        shred -uv {{ item }}
      failed_when: False
      with_items:
        - "/tmp/*"
        - "/var/tmp/*"
        - "/tmp/.*"
        - "/var/lib/systemd/random-seed"
        - "/var/log/audit/audit.log"
        - "/root/.lesshst"
        - "/root/.*history"
        - "/etc/ssh/*_key"
        - "/etc/ssh/*_key.pub"

    - name: unset root history
      shell: unset HISTFILE

    - name: zero out free space
      shell: >
        dd if=/dev/zero of=/deleteme bs=1M;
        rm -f /deleteme
      failed_when: False
